{
  "name": "example_extended_schema",
  "description": "...",
  "version": "1.1.1.0",
  "schemas": [
    {
      "name": "comorbidity",
      "description": "Any medical conditions (e.g diabetes, prior cancer malignancies) that have existed or may occur during the clinical course of the participant who has the index disease under study.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_comorbidity_diagnosis"
          },
          "name": "age_at_comorbidity_diagnosis",
          "description": "Indicate the age (in days) of comorbidity diagnosis.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "comorbidity_code",
            "required": [
              "Provide code in Compact URI (CURIE) pattern. ICD-10 code: refer to https://icd.who.int/browse10/2019/en MONDO code: refer to https://www.ebi.ac.uk/ols/ontologies/mondo"
            ],
            "examples": [
              "MONDO:0000001",
              "icd10:C34"
            ]
          },
          "name": "comorbidity_code",
          "description": "Use ICD-10 code or Mondo code to indicate the comorbidity diagnosed. Provide code in Compact URI (CURIE) pattern.",
          "restrictions": {
            "required": true,
            "regex": "^icd10:(([XVI]+)|([A-Z][0-9]+((-[A-Z][0-9]+)|(\\.[0-9]))?))$|^MONDO:\\d{7}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "comorbidity_status"
          },
          "name": "comorbidity_status",
          "description": "Indicate the current state or activity of the comorbid condition.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Active",
              "In Remission",
              "Resolved",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "comorbidity_term",
            "mappings": {
              "mCODE.STU3": "condition.code",
              "FHIR": "condition.code",
              "Phenopacket": "disease.term"
            }
          },
          "name": "comorbidity_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the comorbidity_code",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "comorbidity_treatment_status"
          },
          "name": "comorbidity_treatment_status",
          "description": "Indicate whether the comorbid condition is currently being treated or not.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Treated and resolved",
              "Under treatment",
              "Untreated",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "demographic",
      "description": "Data for the characterization of the participant by means of segmenting the population (e.g., characterization by age, sex, or race).",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_death"
          },
          "name": "age_at_death",
          "description": "Age of participant (in days) at time of death",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "age_at_enrollment"
          },
          "name": "age_at_enrollment",
          "description": "Age (in days) of participant at time of enrollment into the study",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "cause_of_death",
            "mappings": {
              "ARGO": "cause_of_death",
              "MOH": "cause_of_death"
            }
          },
          "name": "cause_of_death",
          "description": "Indicate the cause of a participant's death.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Died of cancer",
              "Died of other reasons",
              "Not Applicable",
              "Missing - Unknown",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access"
            ]
          }
        },
        {
          "meta": {
            "displayName": "vital_status",
            "mappings": {
              "CQDG": "vital_status",
              "Phenopacket": "individual.vital_status",
              "BeaconV2": "individual.vital_status"
            }
          },
          "name": "vital_status",
          "description": "Participant's last known state of living or deceased.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Alive",
              "Deceased",
              "Not Applicable",
              "Missing - Unknown",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access"
            ]
          }
        },
        {
          "meta": {
            "displayName": "country_of_birth"
          },
          "name": "country_of_birth",
          "description": "The country where an individual was born, typically defined by current geopolitical borders.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "ancestry"
          },
          "name": "ancestry",
          "description": "The genetic or genomic heritage of an individual, typically tracing the origins of one's ancestors.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "height"
          },
          "name": "height",
          "description": "The measurement of an individual from head to toe recorded in centimeters (cm).",
          "valueType": "number"
        },
        {
          "meta": {
            "displayName": "weight"
          },
          "name": "weight",
          "description": "The mass or body weight of an individual measured in kilograms (kg).",
          "valueType": "number"
        },
        {
          "meta": {
            "displayName": "highest_education_level_achieved"
          },
          "name": "highest_education_level_achieved",
          "description": "The highest level of formal education an individual has completed.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "employment"
          },
          "name": "employment",
          "description": "The current work status of an individual.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "type_of_residence"
          },
          "name": "type_of_residence",
          "description": "The kind of dwelling in which an individual lives.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "number_of_other_people_in_household"
          },
          "name": "number_of_other_people_in_household",
          "description": "The total number of individuals living in the same household as the participant, excluding the participant.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "pregnancy"
          },
          "name": "pregnancy",
          "description": "Indicates whether an individual is currently pregnant.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "No",
              "Unknown",
              "Yes"
            ]
          }
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "diagnosis",
      "description": "The disease that is inferred to be present in the individual, family or cohort being analyzed.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_diagnosis_id",
            "mappings": {
              "mCODE.STU1": "Condition.identifier",
              "mCODE.STU2": "Condition.identifier",
              "FHIR": "condition.code",
              "ARGO": "submitter_diagnosis_id",
              "MOH": "submitter_diagnosis_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_diagnosis_id",
          "description": "Unique identifier of the primary diagnosis event, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}$"
          },
          "valueType": "string",
          "unique": true
        },
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_diagnosis",
            "mappings": {
              "mCODE.STU3": "condition.onset",
              "FHIR": "condition.onset",
              "Phenopacket": "disease.onset",
              "ARGO": "age_at_diagnosis",
              "MOH": "age_at_diagnosis"
            }
          },
          "name": "age_at_diagnosis",
          "description": "Age of participant (in days) at time of diagnosis of the condition.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "disease_code",
            "mappings": {
              "mCODE.STU3": "condition.code",
              "FHIR": "condition.code",
              "Phenopacket": "disease.term",
              "ARGO": "disease_code",
              "MOH": "disease_code",
              "CQDG": "disease_code"
            },
            "required": [
              "Provide code in Compact URI (CURIE) pattern. ICD-10 code: refer to https://icd.who.int/browse10/2019/en MONDO code: refer to https://www.ebi.ac.uk/ols/ontologies/mondo"
            ],
            "examples": [
              "MONDO:0000001",
              "icd10:C34"
            ]
          },
          "name": "disease_code",
          "description": "Use ICD-10 code or Mondo code to represent the disease diagnosed.",
          "restrictions": {
            "required": true,
            "regex": "^icd10:(([XVI]+)|([A-Z][0-9]+((-[A-Z][0-9]+)|(\\.[0-9]))?))$|^MONDO:\\d{7}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "disease_term",
            "mappings": {
              "mCODE.STU3": "condition.code",
              "FHIR": "condition.code",
              "Phenopacket": "disease.term"
            }
          },
          "name": "disease_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the disease_code",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "covid19_severity"
          },
          "name": "covid19_severity",
          "description": "A measure of the severity of a COVID-19 infection, which can range from mild to severe or critical.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Ambulatory (limitation of activities)",
              "Ambulatory (no limitation of activities)",
              "Ambulatory (with or without limitation of activities)",
              "Dead - death",
              "Hospitalized - mild disease (hospitalized, no oxygen therapy)",
              "Hospitalized - mild disease (hospitalized, oxygen by mask or nasal prongs)",
              "Hospitalized - severe disease (intubation and mechanical ventilation)",
              "Hospitalized - severe disease (non-invasive ventilation or high-flow oxygen)",
              "Hospitalized - severe disease (ventilation and additional organ support, i.e. pressors, RRT, ECMO)",
              "Uninfected (no clinical or virological evidence of infection)"
            ]
          }
        },
        {
          "meta": {
            "displayName": "covid19_vaccine_doses"
          },
          "name": "covid19_vaccine_doses",
          "description": "The number of COVID-19 vaccine doses the patient has received.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "No",
              "Unknown",
              "Yes, four doses",
              "Yes, one dose",
              "Yes, three doses",
              "Yes, two doses"
            ]
          }
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "exposure",
      "description": "Capture information about external factors, agents, or conditions an individual has encountered that may influence health or disease outcomes.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_exposure"
          },
          "name": "age_at_exposure",
          "description": "Age (in days) when the participant was exposed (or first exposed)        ",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "exposure_amount"
          },
          "name": "exposure_amount",
          "description": "Provide intensity, quantity or frequency of the exposure",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "exposure_code",
            "examples": [
              "LOINC:43164-0"
            ]
          },
          "name": "exposure_code",
          "description": "Provide the standardized codes from SNOMED CT, ExO, LOINC to represent the type of exposure.\nProvide code in Compact URI (CURIE) pattern.\n",
          "restrictions": {
            "required": true,
            "regex": "^snomedct:(\\w+)?\\d+$|^ExO:\\d{7}$|^LOINC:[0-9]{1,5}-[0-9]$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "exposure_duration"
          },
          "name": "exposure_duration",
          "description": "Duration of exposure period",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "exposure_status"
          },
          "name": "exposure_status",
          "description": "Provide the status of the exposure",
          "restrictions": {
            "required": true,
            "codeList": [
              "Current",
              "Former",
              "Never",
              "Exposed - Current Unknown",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "exposure_term",
            "examples": [
              "Alcohol use"
            ]
          },
          "name": "exposure_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the exposure_code",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "exposure_unit",
            "examples": [
              "drinks/day"
            ]
          },
          "name": "exposure_unit",
          "description": "Unit associated with exposure_amount",
          "valueType": "string"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "follow_up",
      "description": "Any point of contact with a patient after primary diagnosis. ",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_followup"
          },
          "name": "age_at_followup",
          "description": "Participant's age (in days) at time of the follow up event",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "disease_status_at_followup"
          },
          "name": "disease_status_at_followup",
          "description": "Indicate the participant's disease status at time of follow-up",
          "restrictions": {
            "required": true,
            "codeList": [
              "Complete remission",
              "Distant progression",
              "Loco-regional progression",
              "No evidence of disease",
              "Partial remission",
              "Progression NOS",
              "Relapse or recurrence",
              "Stable"
            ]
          },
          "valueType": "string"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "measurement",
      "description": "Record individual measurements to capture quantitative, ordinal (e.g., absent/present), or categorical measurements.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_measurement"
          },
          "name": "age_at_measurement",
          "description": "Age (in days) of the participant at the time the lab test or measurement was conducted.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "measurement_code",
            "required": [
              "Provide code in Compact URI (CURIE) pattern. LOINC URL: https://loinc.org/{code}"
            ]
          },
          "name": "measurement_code",
          "description": "Use standartized LOINC (Logical Observation Identifiers Names and Codes) code to represent quantitative, ordinal, or categorical measurements.",
          "restrictions": {
            "required": true,
            "regex": "^LOINC:[0-9]{1,5}-[0-9]$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "measurement_result_categorical"
          },
          "name": "measurement_result_categorical",
          "description": "The categorical result of the lab test or measurement.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "measurement_result_numeric"
          },
          "name": "measurement_result_numeric",
          "description": "The numeric result of the lab test or measurement.",
          "valueType": "number"
        },
        {
          "meta": {
            "displayName": "measurement_term"
          },
          "name": "measurement_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the measurement_code",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "measurement_unit"
          },
          "name": "measurement_unit",
          "description": "Indicate the unit of measurement for the result using LOINC code.",
          "valueType": "string",
          "restrictions": {
            "regex": "^UO:\\d{7}$"
          }
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "medication",
      "description": "An agent such as a drug (pharmaceutical agent), broadly defined as prescription and over-the-counter medicines, vaccines, and large-molecule biologic therapies.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_treatment_id",
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_treatment_id",
          "description": "Unique identifier of the treatment, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "actual_cumulative_drug_dose"
          },
          "name": "actual_cumulative_drug_dose",
          "description": "Indicate the total actual cumulative drug dose in the same units specified in drug_dose_units.",
          "valueType": "number"
        },
        {
          "meta": {
            "displayName": "drug_code",
            "required": [
              "Provide code in Compact URI (CURIE) pattern.  RxNorm URL: https://rxnav.nlm.nih.gov/REST/rxcui/{code}  KEGG URL: https://www.kegg.jp/entry/{code}  PubChem URL: https://pubchem.ncbi.nlm.nih.gov/compound/{code}  NCIt URL: https://ncit.nci.nih.gov/ncitbrowser/ConceptReport.jsp?dictionary=NCI_Thesaurus&code=C{code}"
            ],
            "examples": [
              "rxnorm:221058",
              "kegg.drug:D00123",
              "pubchem.compound:100101",
              "NCIT:C138986"
            ]
          },
          "name": "drug_code",
          "description": "Provide the standardized code from RxNorm, KEGG,  PubChem or NCIt to represent the drug.",
          "restrictions": {
            "required": true,
            "regex": "^rxnorm:\\d{1,8}$|^kegg\\.drug:D\\d+$|^pubchem\\.chem:\\d+$|^NCIT:C\\d{1,7}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "drug_dose_units"
          },
          "name": "drug_dose_units",
          "description": "Indicate units used to record drug dose.",
          "valueType": "string",
          "restrictions": {
            "regex": "^UO:\\d{7}$"
          }
        },
        {
          "meta": {
            "displayName": "drug_term"
          },
          "name": "drug_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the drug_code",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "prescribed_cumulative_drug_dose"
          },
          "name": "prescribed_cumulative_drug_dose",
          "description": "Indicate the total prescribed cumulative drug dose in the same units specified in drug_dose_units.",
          "valueType": "number"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "treatment",
            "mappings": [
              {
                "local": "submitter_treatment_id",
                "foreign": "submitter_treatment_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "participant",
      "description": "The collection of all data related to a specific individual human in the context of a specific study.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string",
          "unique": true
        },
        {
          "meta": {
            "displayName": "study_id",
            "mappings": {
              "ARGO": "studyId",
              "CQDG": "study_id"
            }
          },
          "name": "study_id",
          "description": "Unique identifier of the study.",
          "restrictions": {
            "required": true
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "disease_specific_modifier",
            "examples": [
              "MONDO:0000001"
            ]
          },
          "name": "disease_specific_modifier",
          "description": "If the permission is DUO:0000007 (disease specific research), then MONDO codes must be provided to specify which disease(s) apply.",
          "valueType": "string",
          "restrictions": {
            "regex": "^MONDO:\\d{7}$"
          },
          "isArray": true,
          "delimiter": "|"
        },
        {
          "meta": {
            "displayName": "duo_modifier",
            "mappings": {
              "CQDG": "duo_modifier"
            }
          },
          "name": "duo_modifier",
          "description": "Collection of Data Use Ontology (DUO) codes in Compact URI (CURIE) pattern to add requirements, limitations, or prohibitions within the permitted boundary for the Participant data.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "DUO:0000043 (clinical care use)",
              "DUO:0000029 (return to database or resource)",
              "DUO:0000028 (institution specific restriction)",
              "DUO:0000027 (project specific restriction)",
              "DUO:0000026 (user specific restriction)",
              "DUO:0000025 (time limit on use)",
              "DUO:0000024 (publication moratorium)",
              "DUO:0000022 (geographical restriction)",
              "DUO:0000021 (ethics approval required)",
              "DUO:0000020 (collaboration required)",
              "DUO:0000019 (publication required)",
              "DUO:0000018 (not for profit, non commercial use only)",
              "DUO:0000046 (non-commercial use only)",
              "DUO:0000045 (not for profit organisation use only)",
              "DUO:0000016 (genetic studies only)",
              "DUO:0000015 (no general methods research)",
              "DUO:0000012 (research specific restrictions)",
              "DUO:00000044 (population origins or ancestry research prohibited)"
            ]
          },
          "isArray": true,
          "delimiter": "|"
        },
        {
          "meta": {
            "displayName": "duo_permission",
            "mappings": {
              "CQDG": "duo_permission"
            }
          },
          "name": "duo_permission",
          "description": "Select one of the Data Use Ontology (DUO) codes in Compact URI (CURIE) pattern to indicate permitted uses or focused areas of research for the Participant data.",
          "restrictions": {
            "required": true,
            "codeList": [
              "DUO:0000042 (general research use)",
              "DUO:0000006 (health or medical or biomedical research)",
              "DUO:0000007 (disease specific research)",
              "DUO:0000011 (population origins or ancestry research only)",
              "DUO:0000004 (no restriction)"
            ]
          },
          "valueType": "string"
        }
      ]
    },
    {
      "name": "phenotype",
      "description": "Individual phenotypic features, observed as either present or absent (excluded), with possible onset, modifiers and frequency",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_phenotype"
          },
          "name": "age_at_phenotype",
          "description": "Participant's age (in days) when phenotype was observed",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "phenotype_code",
            "required": [
              "Provide code in Compact URI (CURIE) pattern.  HPO URL: https://hpo.jax.org/app/browse/term/HP:<code>"
            ]
          },
          "name": "phenotype_code",
          "description": "Use standardized HPO (Human Phenotype Ontology) codes to represent the phenotype.",
          "restrictions": {
            "required": true,
            "regex": "^HP:[0-9]{7}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "phenotype_duration"
          },
          "name": "phenotype_duration",
          "description": "Indicate the length of time (in days) over which the phenotype was observed in the participant.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "phenotype_observed"
          },
          "name": "phenotype_observed",
          "description": "Indicate whether the phenotype was observed in the participant.",
          "restrictions": {
            "required": true,
            "codeList": [
              "No",
              "Unknown",
              "Yes"
            ]
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "phenotype_severity",
            "required": [
              "Permissible values from https://hpo.jax.org/browse/term/HP:0012824"
            ]
          },
          "name": "phenotype_severity",
          "description": "The degree or severity of the observed phenotype.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Borderline",
              "Mild",
              "Moderate",
              "Profound",
              "Severe"
            ]
          }
        },
        {
          "meta": {
            "displayName": "phenotype_term"
          },
          "name": "phenotype_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the phenotype_code.",
          "valueType": "string"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "procedure",
      "description": "A clinical procedure performed on a subject. For example a surgical or diagnostic procedure such as a biopsy.",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_treatment_id",
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_treatment_id",
          "description": "Unique identifier of the treatment, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "procedure_body_site_code",
            "mappings": {
              "mCODE.STU3": "Specimen.collection.bodySite",
              "FHIR": "Specimen.collection.bodySite",
              "ARGO": "procedure_body_site_code",
              "MOH": "procedure_body_site_code"
            },
            "required": [
              "Refer to the International Classification of Diseases for Oncology, 3rd Edition (WHO ICD-O-3) manual for guidelines at https://apps.who.int/iris/handle/10665/42344"
            ],
            "examples": [
              "C50.1",
              "C18"
            ]
          },
          "name": "procedure_body_site_code",
          "description": "Indicate the ICD-O-3 topography code to describe the site of the surgery if applicable. Please use C80.9 if the site is Unkown.",
          "restrictions": {
            "required": true,
            "regex": "^ICDO3:[C][0-9]{2}(.[0-9]{1})?$|^UBERON:\\d{7,}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "procedure_body_site_term"
          },
          "name": "procedure_body_site_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the procedure_body_site_code",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "procedure_code",
            "required": [
              "Provide code in Compact URI (CURIE) pattern.  NCIt URL: https://ncit.nci.nih.gov/ncitbrowser/ConceptReport.jsp?dictionary=NCI_Thesaurus&code=C<code>  SNOMED-CT URL: http://snomed.info/id/<code>  UMLS URL: https://uts.nlm.nih.gov/uts/umls/concept/<code> CCI URL: https://www.cihi.ca/en/cci-coding-structure"
            ],
            "examples": [
              "NCIT:C51894",
              "snomedct:284196006",
              "umls:C2584994",
              "CCI:1CA14STCDR"
            ]
          },
          "name": "procedure_code",
          "description": "Use code from NCIt, SNOMED-CT, UMLS or CCI to represent the procedure performed.",
          "restrictions": {
            "required": true,
            "regex": "^NCIT:C\\d+$|^snomedct:(\\w+)?\\d+$|^umls:C\\d+$|^CCI:[A-Z0-9]([0-9]{2}|[A-Z]{2}){3}(([0-9]{2}|[A-Z]{2})[A-Z0-9]?)?$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "procedure_term"
          },
          "name": "procedure_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the procedure_code",
          "valueType": "string"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "treatment",
            "mappings": [
              {
                "local": "submitter_treatment_id",
                "foreign": "submitter_treatment_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "specimen",
      "description": "Any material sample taken from a biological entity, living or dead, from physical object or the environment",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_specimen_id",
            "mappings": {
              "CQDG": "submitter_biospecimen_id",
              "mCODE.STU3": "Specimen.Identifier",
              "FHIR": "Specimen.Identifier",
              "Phenopacket": "biosample.id",
              "BeaconV2": "biosample.id",
              "ARGO": "submitter_specimen_id",
              "MOH": "submitter_specimen_id"
            },
            "examples": [
              "LAML_PO",
              "00445",
              "THY_099-tumour"
            ]
          },
          "name": "submitter_specimen_id",
          "description": "Unique identifier of the specimen within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}$"
          },
          "valueType": "string",
          "unique": true
        },
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_specimen_collection"
          },
          "name": "age_at_specimen_collection",
          "description": "Indicate participant's age( in days) when specimen was collected.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "specimen_anatomic_location_code",
            "mappings": {
              "mCODE.STU3": "Specimen.collection.bodySite",
              "FHIR": "Specimen.collection.bodySite",
              "ARGO": "specimen_anatomic_location_code",
              "MOH": "specimen_anatomic_location_code"
            },
            "required": [
              "Refer to the International Classification of Diseases for Oncology, 3rd Edition (WHO ICD-O-3) manual for guidelines at https://apps.who.int/iris/handle/10665/42344."
            ],
            "examples": [
              "C50.1",
              "C18"
            ]
          },
          "name": "specimen_anatomic_location_code",
          "description": "Indicate the ICD-O-3 topography code for the anatomic location of a specimen when it was collected. Please use C80.9 if the primary site of a specimen is Unkown.",
          "valueType": "string",
          "restrictions": {
            "regex": "^ICDO3:[C][0-9]{2}(.[0-9]{1})?$|^UBERON:\\d{7,}$"
          }
        },
        {
          "meta": {
            "displayName": "specimen_anatomic_location_term",
            "examples": [
              "placental basal plate"
            ]
          },
          "name": "specimen_anatomic_location_term",
          "description": "Provide the standardized and human readable term derived from the coding system associated with the specimen anatomic location code.",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "specimen_laterality",
            "mappings": {
              "mCODE.STU3": "Specimen.collection.bodySite.extension.lateralityQualifier",
              "FHIR": "Specimen.collection.bodySite.extension.lateralityQualifier"
            },
            "required": [
              "Reference caDSR CDE ID 2007875 https://cdebrowser.nci.nih.gov/cdebrowserClient/cdeBrowser.html#/search?publicId=2007875&version=2.0"
            ]
          },
          "name": "specimen_laterality",
          "description": "For cancer in a paired organ, indicate the side on which the specimen was obtained.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Left",
              "Right",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "specimen_processing",
            "mappings": {
              "Phenopacket": "biosample.sample_processing",
              "BeaconV2": "biosample.sample_processing",
              "ARGO": "specimen_processing",
              "MOH": "specimen_processing"
            }
          },
          "name": "specimen_processing",
          "description": "Indicate the technique used to process specimen.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Cryopreservation - other",
              "Cryopreservation in dry ice (dead tissue)",
              "Cryopreservation in liquid nitrogen (dead tissue)",
              "Cryopreservation of live cells in liquid nitrogen",
              "Formalin fixed & paraffin embedded",
              "Formalin fixed - buffered",
              "Formalin fixed - unbuffered",
              "Fresh",
              "Other",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "specimen_storage",
            "mappings": {
              "Phenopacket": "biosample.sample_storage",
              "BeaconV2": "biosample.sample_storage",
              "ARGO": "specimen_storage",
              "MOH": "specimen_storage"
            }
          },
          "name": "specimen_storage",
          "description": "Indicate the method of long term storage for specimen that were not extracted freshly or immediately cultured.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Cut slide",
              "Frozen in -70 freezer",
              "Frozen in liquid nitrogen",
              "Frozen in vapour phase",
              "Not Applicable",
              "Other",
              "Paraffin block",
              "RNA later frozen",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "specimen_tissue_source_code",
            "mappings": {
              "CQDG": "biospecimen_tissue_source",
              "mCODE.STU3": "Specimen.type",
              "FHIR": "Specimen.type",
              "Phenopacket": "biosample.sampled_tissue",
              "BeaconV2": "biosample.sampled_tissue"
            }
          },
          "name": "specimen_tissue_source_code",
          "description": "Indicate the tissue source of the specimen from which a biopsy or other tissue specimen was obtained.  Use codes from NCIt (NCI Thesaurus) or SNOMED-CT (SNOMED Clinical Terms) in Compact URI (CURIE) pattern.",
          "restrictions": {
            "required": true,
            "regex": "^NCIT:C[0-9]+$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "specimen_tissue_source_term"
          },
          "name": "specimen_tissue_source_term",
          "description": "Indicate the human readable label for the specimen tissue source code.",
          "valueType": "string"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "treatment",
      "description": "Medications, procedures, other actions taken for clinical management",
      "fields": [
        {
          "meta": {
            "displayName": "submitter_treatment_id",
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_treatment_id",
          "description": "Unique identifier of the treatment, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}$"
          },
          "valueType": "string",
          "unique": true
        },
        {
          "meta": {
            "displayName": "submitter_diagnosis_id",
            "mappings": {
              "mCODE.STU1": "Condition.identifier",
              "mCODE.STU2": "Condition.identifier",
              "FHIR": "condition.code",
              "ARGO": "submitter_diagnosis_id",
              "MOH": "submitter_diagnosis_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_diagnosis_id",
          "description": "Unique identifier of the primary diagnosis event, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}$"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "submitter_participant_id",
            "mappings": {
              "CQDG": "submitter_participant_id",
              "mCODE.STU3": "Patient.Identifier",
              "FHIR": "Patient.Identifier",
              "Phenopacket": "individual.id",
              "BeaconV2": "individual.id",
              "ARGO": "submitter_participant_id",
              "MOH": "submitter_participant_id"
            },
            "examples": [
              "90234",
              "BLD_donor_89",
              "AML-90"
            ]
          },
          "name": "submitter_participant_id",
          "description": "Unique identifier of the participant within the study, assigned by the data provider.",
          "restrictions": {
            "required": true,
            "regex": "^[A-Za-z0-9\\-\\._]{1,64}"
          },
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "age_at_treatment"
          },
          "name": "age_at_treatment",
          "description": "Age (in days) of the participant at the time the treatment was administered.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "treatment_duration"
          },
          "name": "treatment_duration",
          "description": "The length of time (in days) over which the treatment was administered.",
          "valueType": "integer"
        },
        {
          "meta": {
            "displayName": "treatment_intent"
          },
          "name": "treatment_intent",
          "description": "The purpose of the treatment or the desired effect or outcome resulting from the treatment.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Curative",
              "Diagnostic",
              "Forensic",
              "Guidance",
              "Palliative",
              "Preventative",
              "Screening",
              "Supportive",
              "Other",
              "Missing - Unknown",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "treatment_response",
            "mappings": {
              "ARGO": "treatment_response",
              "MOH": "treatment_response",
              "CQDG": "treatment_response"
            }
          },
          "name": "treatment_response",
          "description": "The outcome of the treatment, indicating how the patient responded to the intervention",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Clinical remission",
              "Disease Progression",
              "Improvement of symptoms",
              "No improvement of symptoms",
              "No sign of disease",
              "Partial Response",
              "Stable Disease",
              "Treatment cessation due to toxicity",
              "Worsening of symptoms",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "treatment_status",
            "mappings": {
              "ARGO": "treatment_status",
              "MOH": "treatment_status"
            }
          },
          "name": "treatment_status",
          "description": "Indicate the donor's status of the prescribed treatment.",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "Other",
              "Patient choice (stopped or interrupted treatment)",
              "Physician decision (stopped or interrupted treatment)",
              "Treatment completed as prescribed",
              "Treatment incomplete because patient died",
              "Treatment incomplete due to technical or organizational problems",
              "Treatment ongoing",
              "Treatment stopped due to acute toxicity",
              "Treatment stopped due to lack of efficacy (disease progression)",
              "Missing - Not collected",
              "Missing - Not provided",
              "Missing - Restricted access",
              "Missing - Unknown",
              "Not applicable"
            ]
          }
        },
        {
          "meta": {
            "displayName": "treatment_type"
          },
          "name": "treatment_type",
          "description": "The category or method of treatment administered",
          "restrictions": {
            "required": true,
            "codeList": [
              "Medication",
              "Pharmacotherapy",
              "Procedure",
              "Radiation therapy",
              "Other"
            ]
          },
          "valueType": "string"
        }
      ],
      "restrictions": {
        "foreignKey": [
          {
            "schema": "diagnosis",
            "mappings": [
              {
                "local": "submitter_diagnosis_id",
                "foreign": "submitter_diagnosis_id"
              }
            ]
          },
          {
            "schema": "participant",
            "mappings": [
              {
                "local": "submitter_participant_id",
                "foreign": "submitter_participant_id"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "imaging",
      "description": "An imaging test",
      "fields": [
        {
          "meta": {
            "displayName": "image_hosted_url"
          },
          "name": "image_hosted_url",
          "description": "A URL for where the image is hosted",
          "valueType": "string"
        },
        {
          "meta": {
            "displayName": "image_hosted_format"
          },
          "name": "image_hosted_format",
          "description": "Accepted data types for images",
          "valueType": "string",
          "restrictions": {
            "codeList": [
              "PNG",
              "SVG",
              "PDF",
              "JPEG"
            ]
          }
        },
        {
          "meta": {
            "displayName": "image_processing_pipeline"
          },
          "name": "image_processing_pipeline",
          "description": "Post processing pipeline dependent on image_hosted_format where:\n - image_hosted_format is PNG, choices are \n* PipelineA\n* PipelineB\n* PipelineC\n - image_hosted_format is SVG, choices are \n* PipelineA\n* PipelineD\n* PipelineE\n - image_hosted_format is PDF or JPEG, choices are \n* PipelineA\n* PipelineD\n* PipelineF\n",
          "valueType": "string",
          "restrictions": {
            "if": {
              "conditions": [
                {
                  "fields": [
                    "image_hosted_format"
                  ],
                  "match": {
                    "value": "PNG"
                  },
                  "case": "all"
                }
              ]
            },
            "then": {
              "required": true,
              "codeList": [
                "pipelineA",
                "pipelineB",
                "pipelineC"
              ]
            },
            "else": {
              "if": {
                "conditions": [
                  {
                    "fields": [
                      "image_hosted_format"
                    ],
                    "match": {
                      "value": "SVG"
                    },
                    "case": "all"
                  }
                ]
              },
              "then": {
                "required": true,
                "codeList": [
                  "pipelineA",
                  "pipelineD",
                  "pipelineE"
                ]
              },
              "else": {
                "if": {
                  "conditions": [
                    {
                      "fields": [
                        "image_hosted_format"
                      ],
                      "match": {
                        "value": "JPEG"
                      },
                      "case": "all"
                    }
                  ]
                },
                "then": {
                  "required": true,
                  "codeList": [
                    "pipelineA",
                    "pipelineD",
                    "pipelineF"
                  ]
                }
              }
            }
          }
        },
        {
          "meta": {
            "displayName": "image_processing_personel"
          },
          "name": "image_processing_personel",
          "description": "String value for the person who processed the image.\nMust be provided.If not 'image_processing_null_reason' must be provided",
          "valueType": "string",
          "restrictions": {
            "if": {
              "conditions": [
                {
                  "fields": [
                    "image_processing_null_reason"
                  ],
                  "match": {
                    "exists": false
                  },
                  "case": "all"
                }
              ]
            },
            "then": {
              "required": true
            },
            "else": {
              "empty": true
            }
          }
        },
        {
          "meta": {
            "displayName": "image_processing_null_reason"
          },
          "name": "image_processing_null_reason",
          "description": "Tracks reason for why image processing personnel was not provided.\nOnly applicable if image_processing_personnel is not provided.\nPossible values:\n* Unknown\n* Revoked\n* Not Provided\nOtherwise leave empty",
          "valueType": "string",
          "restrictions": {
            "if": {
              "conditions": [
                {
                  "fields": [
                    "image_processing_personel"
                  ],
                  "match": {
                    "exists": false
                  },
                  "case": "all"
                }
              ]
            },
            "then": {
              "required": true,
              "codeList": [
                "Unknown",
                "Not Provided",
                "Revoked"
              ]
            },
            "else": {
              "empty": true
            }
          }
        }
      ]
    }
  ]
}